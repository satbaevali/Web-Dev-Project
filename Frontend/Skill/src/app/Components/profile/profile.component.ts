import { Component, OnInit } from '@angular/core';
import { SkillServiceService } from '../../Service/skill-service.service';
import { Router } from '@angular/router';
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
@Component({
  selector: 'app-profile',
  imports: [CommonModule, FormsModule],
  standalone: true,
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent implements OnInit {
  user = {
    username: '',
    email: '',
    first_name: '',
    last_name: '',
    bio: '',
    skill: [],
    profile_picture: ''
  };
  errorMessage: string = '';
  selectedFile: File | null = null;
  previewUrl: string | null = null;
  editMode: boolean = false; // üëà –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å
  constructor(private skillService: SkillServiceService, private route: Router) {}
  ngOnInit(): void {
    this.loadUserProfile();
  }
  loadUserProfile(): void {
    this.skillService.getUserProfile().subscribe({
      next: (response) => {
        this.user = response; // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
      },
      error: (error) => {
        this.errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å';
      }
    });
  }
  updateProfile(): void {
    const formData = new FormData();
    formData.append('username', this.user.username);
    formData.append('email', this.user.email);
    formData.append('first_name', this.user.first_name);
    formData.append('last_name', this.user.last_name);
    formData.append('bio', this.user.bio);
    
    
    if (this.selectedFile) {
      formData.append('profile_picture', this.selectedFile, this.selectedFile.name);
    }
  
    this.skillService.updateUserProfile(formData).subscribe({
      next: (response) => {
        alert('–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        this.route.navigate(['/home']);
      },
      error: (error) => {
        this.errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è';
      }
    });
  }
  onFileSelected(event: any): void {
    const file: File = event.target.files[0];
    if (file) {
      this.selectedFile = file;
      this.previewUrl = URL.createObjectURL(file); // –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–µ–≤—å—é
      console.log('–í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª:', file);
    }
  }
  goToProfile() {
    this.route.navigate(['/profile']);
  }
  

}
